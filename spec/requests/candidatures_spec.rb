require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe Candidature, type: :request do
  describe 'GET /index' do
    it 'renders a successful response' do
      create_candidature
      get candidatures_url
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      candidature = create_candidature
      get candidature_url(candidature)
      expect(response).to be_successful
    end
  end

  describe 'GET /new' do
    it 'renders a successful response' do
      get new_candidature_url
      expect(response).to be_successful
    end
  end

  describe 'GET /edit' do
    it 'renders a successful response' do
      candidature = create_candidature
      get edit_candidature_url(candidature)
      expect(response).to be_successful
    end
  end

  describe 'POST /create' do
    it 'creates a new Candidature' do
      expect {
        post candidatures_url,
             params: { candidature: FactoryBot.attributes_for(:candidature) }
      }.to change(Candidature, :count).by(1)
    end

    it 'redirects to the created candidature' do
      post_create_request
      expect(response).to redirect_to(candidature_url(Candidature.last))
    end
  end

  describe 'PATCH /update' do

    it 'redirects to the candidature' do
      candidature = create_candidature
      patch_update_request(candidature)
      candidature.reload
      expect(response).to redirect_to(candidature_url(candidature))
    end
  end

  describe 'DELETE /destroy' do
    it 'destroys the requested candidature' do
      candidature = create_candidature
      expect {
        delete candidature_url(candidature)
      }.to change(Candidature, :count).by(-1)
    end

    it 'redirects to the candidatures list' do
      candidature = create_candidature
      delete candidature_url(candidature)
      expect(response).to redirect_to(candidatures_url)
    end
  end

  private

  def create_candidature
    FactoryBot.create(:candidature)
  end

  def post_create_request
    post candidatures_url,
         params: { candidature: FactoryBot.attributes_for(:candidature) }
  end

  def patch_update_request(candidature)
    patch candidature_url(candidature),
          params: { candidature: FactoryBot.attributes_for(:candidature) }
  end
end


